
* Fitness of wildtype
- When fitness if FDF WT can have arbitrary values
- O.w. it is for now set by decree at 1  
- In C++ we represent the WT as a genotype of length 0
- For now, we emit notes/messages when evaluating length 0 genotypes


* An inconsistency
  - evalGenotype can take a genotype as "0" (the number) but initMutant
    does not accept that

* Multiple initMutants and initMutants in general
  - As of now, [2020-12-05 Sat], we have started, in C++, always dealing
    with initMutants as if initMutants were present. If they are not, the
    WT is the initMutant. Simplifies logic of the population
    initialization block.
    
* What we used to do in the messy initialization block
  - For McFL compute fitness
  - For Bozic and exp:
    - Create a dummy "parent gentoype" with default birth and death
    - call nr_fitness with that parent genotype as the parent and the new
      genotype as the tmpP, the genotype for which we evaluate.
      - since nr_fitness modifies in place the first argument, we get the
        birth/rate in there.
  - But this sucks a lot.

